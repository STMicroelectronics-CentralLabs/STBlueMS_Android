/*
 * Copyright (c) 2017  STMicroelectronics â€“ All rights reserved
 * The STMicroelectronics corporate logo is a trademark of STMicroelectronics
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * - Redistributions of source code must retain the above copyright notice, this list of conditions
 *   and the following disclaimer.
 *
 * - Redistributions in binary form must reproduce the above copyright notice, this list of
 *   conditions and the following disclaimer in the documentation and/or other materials provided
 *   with the distribution.
 *
 * - Neither the name nor trademarks of STMicroelectronics International N.V. nor any other
 *   STMicroelectronics company nor the names of its contributors may be used to endorse or
 *   promote products derived from this software without specific prior written permission.
 *
 * - All of the icons, pictures, logos and other images that are provided with the source code
 *   in a directory whose title begins with st_images may only be used for internal purposes and
 *   shall not be redistributed to any third party or modified in any way.
 *
 * - Any redistributions in binary form shall not include the capability to display any of the
 *   icons, pictures, logos and other images that are provided with the source code in a directory
 *   whose title begins with st_images.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER
 * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
 * OF SUCH DAMAGE.
 */

apply plugin: 'com.android.application'

static def getDate() {
    def date = new Date()
    def formattedDate = date.format('MMddHHmm')
    return formattedDate
}

android {

    signingConfigs {
        config {
            storeFile file("../myreleasekey.jks")
            storePassword "password"
            keyAlias "MyReleaseKey"
            keyPassword "password"
        }
    }

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {

        minSdkVersion rootProject.ext.minSdkVersion
        versionCode 31
        versionName '4.4.0'
        applicationId 'com.physiobiometrics.Mems'
        targetSdkVersion rootProject.ext.targetSdkVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    buildTypes {
        release {
            //signingConfig signingConfigs.config
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-dev" + getDate()
        }
    }

    sourceSets {
        all {
            res.srcDirs += ['st_images']
        }
    }

    productFlavors {

    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    //to use until all the string doesn't have a chinese translation
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude "thirdpartynotice.txt"
    }
}

ext {
    leakcanaryVersion = '1.5.4'
    retrofitVersion = '2.4.0'
    roomVersion = "1.1.1"
    archLifecycleVersion = '1.1.1'
}

repositories {
    maven { url 'https://jitpack.io' }
}

dependencies {

    implementation fileTree(include: '*.jar', dir: 'libs')
    implementation project(':BlueSTSDK')
    implementation project(':BlueSTSDK_Gui_Android')
    implementation project(':BlueMSCloud')

    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'

    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'

    implementation 'com.android.support:multidex:1.0.3'

    implementation group: 'com.android.support', name: 'design', version: "$rootProject.supportLibraryVersion"
    implementation group: 'com.android.support', name: 'support-v13', version: "$rootProject.supportLibraryVersion"
    implementation group: 'com.android.support', name: 'gridlayout-v7', version: "$rootProject.supportLibraryVersion"
    implementation group: 'com.android.support', name: 'appcompat-v7', version: "$rootProject.supportLibraryVersion"
    implementation group: 'com.android.support', name: 'cardview-v7', version: "$rootProject.supportLibraryVersion"
    implementation group: 'com.android.support.constraint', name: 'constraint-layout', version: "$rootProject.constraintLayoutVersion"

    implementation "android.arch.persistence.room:runtime:$roomVersion"
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    annotationProcessor "android.arch.persistence.room:compiler:$roomVersion"

    // Lifecycle components
    implementation "android.arch.lifecycle:extensions:$rootProject.archLifecycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$rootProject.archLifecycleVersion"

    // ibm speech to text
    implementation group: 'com.ibm.watson.developer_cloud', name: 'speech-to-text', version: '6.14.2'

    //generic websocket speech to cloud
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'


    //memory leak detector
    debugImplementation group: 'com.squareup.leakcanary', name: 'leakcanary-android', version: "$leakcanaryVersion"
    releaseImplementation group: 'com.squareup.leakcanary', name: 'leakcanary-android-no-op', version: "$leakcanaryVersion"
    testImplementation group: 'com.squareup.leakcanary', name: 'leakcanary-android-no-op', version: "$leakcanaryVersion"

    testImplementation group: 'org.json', name: 'json', version: '20190722'
    //since the json lib is inside the android sdk
    testImplementation group: 'junit', name: 'junit', version: "$rootProject.junitVersion"
    testImplementation group: 'org.mockito', name: 'mockito-core', version: "$rootProject.mockitoVersion"

    androidTestImplementation "com.android.support.test:runner:$rootProject.runnerVersion"
    androidTestImplementation "com.android.support.test:rules:$rootProject.rulesVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
}
